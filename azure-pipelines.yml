name: $(Date:yyyyMMdd.HHmm)

resources:
  containers:
  - container: build_dotnet_linux
    image: ubuntu:16.04
    options: '--name build_dotnet_linux -v /usr/bin/docker:/tmp/docker:ro'
  - container: build_wasm_linux
    image: trzeci/emscripten:sdk-tag-1.38.31-64bit
    options: '--name build_dotnet_linux -v /usr/bin/docker:/tmp/docker:ro'
  - container: ubuntu_16_04
    image: ubuntu:16.04
  - container: ubuntu_17_10
    image: ubuntu:17.10
  - container: ubuntu_18_04
    image: ubuntu:18.04
  - container: ubuntu_latest
    image: ubuntu:latest
  - container: centos_7
    image: centos:7
  - container: dotnet_2_0
    image: microsoft/dotnet:2.0-runtime
  - container: dotnet_latest
    image: microsoft/dotnet:latest

jobs:
- job: dotnet_windows
  displayName: '.NET (Windows)'
  pool:
    vmImage: vs2017-win2016
  variables:
    AMDAPPSDKROOT: $(Build.SourcesDirectory)/src/ImageMagick/includes
  strategy:
    matrix:
      Q8-x86:
        QuantumName: Q8
        PlatformName: x86
      Q8-x64:
        QuantumName: Q8
        PlatformName: x64
      Q8-OpenMP-x64:
        QuantumName: Q8-OpenMP
        PlatformName: x64
      Q16-x86:
        QuantumName: Q16
        PlatformName: x86
      Q16-x64:
        QuantumName: Q16
        PlatformName: x64
      Q16-OpenMP-x64:
        QuantumName: Q16-OpenMP
        PlatformName: x64
      Q16-HDRI-x86:
        QuantumName: Q16-HDRI
        PlatformName: x86
      Q16-HDRI-x64:
        QuantumName: Q16-HDRI
        PlatformName: x64
      Q16-HDRI-OpenMP-x64:
        QuantumName: Q16-HDRI-OpenMP
        PlatformName: x64
  steps:
    - template: build/dotnet/windows/build.yml

- job: dotnet_linux
  displayName: '.NET (Linux)'
  pool:
    vmImage: 'Ubuntu 16.04'
  container: build_dotnet_linux
  steps:
    - script: /tmp/docker exec -t -u 0 build_dotnet_linux $(Build.SourcesDirectory)/build/dotnet/linux/install.sudo.sh
      displayName: Install sudo
    - template: build/dotnet/linux/build.yml

- job: dotnet_macos
  displayName: '.NET (MacOS)'
  pool:
    vmImage: macOS 10.13
  steps:
    - template: build/dotnet/macos/build.yml

- job: dotnet_metadata
  displayName: '.NET (Metadata)'
  pool:
    vmImage: vs2017-win2016
  steps:
    - template: build/dotnet/metadata/build.yml

- job: wasm_linux
  displayName: 'WASM (Linux)'
  pool:
    vmImage: 'Ubuntu 16.04'
  container: build_wasm_linux
  steps:
    - script: /tmp/docker exec -t -u 0 build_dotnet_linux $(Build.SourcesDirectory)/build/wasm/linux/install.sudo.sh
      displayName: Install sudo
    - template: build/wasm/linux/build.yml

- template: build/dotnet/linux/verify.yml
  parameters:
    container: ubuntu_16_04

- template: build/dotnet/linux/verify.yml
  parameters:
    container: ubuntu_17_10

- template: build/dotnet/linux/verify.yml
  parameters:
    container: ubuntu_18_04

- template: build/dotnet/linux/verify.yml
  parameters:
    container: ubuntu_latest

- template: build/dotnet/linux/verify.yml
  parameters:
    container: centos_7

- template: build/dotnet/linux/verify.yml
  parameters:
    container: dotnet_2_0

- template: build/dotnet/linux/verify.yml
  parameters:
    container: dotnet_latest

- job: publish
  displayName: 'Publish libraries'
  pool:
    vmImage: vs2017-win2016
  steps:
    - template: publish/dotnet/publish.yml
  dependsOn:
  - dotnet_windows
  - dotnet_linux
  - dotnet_macos
  - dotnet_metadata
  - verify_ubuntu_16_04
  - verify_ubuntu_17_10
  - verify_ubuntu_18_04
  - verify_ubuntu_latest
  - verify_centos_7
  - verify_dotnet_2_0
  - verify_dotnet_latest
